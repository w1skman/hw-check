import os
import asyncio
import logging
from flask import Flask

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ HotWheels Bot is running!"

@app.route('/health')
def health():
    return "üü¢ OK"

def run_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    try:
        token = os.getenv('TELEGRAM_BOT_TOKEN')
        if not token:
            logger.error("‚ùå TELEGRAM_BOT_TOKEN not found")
            return False
            
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from telegram_bot import HotWheelsMonitor
        monitor = HotWheelsMonitor(token)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def start_bot():
            asyncio.run(monitor.start_bot())
        
        import threading
        bot_thread = threading.Thread(target=start_bot)
        bot_thread.daemon = True
        bot_thread.start()
        
        logger.info("ü§ñ Telegram Bot started successfully!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Failed to start bot: {e}")
        return False

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot_started = run_bot()

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    logger.info(f"üöÄ Starting Flask app on port {port}")
    app.run(host='0.0.0.0', port=port)
